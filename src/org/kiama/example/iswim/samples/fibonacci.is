/**
 * Title:       Fibonacci fun
 * Description: A very simple imperative Fibonacci function with driver.
 * Copyright:   (C) 2010-2011 Dominic Verity, Macquarie University
 */ 

// declare preloaded primitives
primitives write, read, fields, type;

// Imperative fibonacci function
letrec fib = fun(n) 
    let r1 = mkref 0
    and r2 = mkref 1 
    and r3 = mkref (-1)
    in  letrec f = fun(m)
            if (m == 0)  
                val r1
            else {  
                r3 := val r1 + val r2;
                r1 := val r2;
                r2 := val r3;
                f (m-1) }
        in f n;

// Execute an example and print the result.
let num = 30;

{
    write "The value fib(";
    write num;
    write ") is equal to ";
    write (fib num);
    write ".\n"
}