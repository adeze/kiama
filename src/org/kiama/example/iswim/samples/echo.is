/**
 * Title:     Code Sample - echo input from terminal
 * Author:    Dominic Verity
 * Copyright: Macquarie University (c) 2007-2010
 *
 * A very simple example of the use of the imperative features of
 * our ISWIM like language. Uses a tail recursive function to emulate
 * a while loop.
 *
 * Actually a good compiler will compile this to a real
 * loop - thus avoiding the overheads associated with function calls.
 */

// Load primitives for reading and writing strings
primitives read, write, toInt;

// A reference box to hold the strings we read.
let r = mkref ()

// And a second to record a running total.
and t = mkref 0;

// Our loop as a tail recursive function.
letrec loop = fun(e) (
    if ((r := read()) != "") { 
        write (val r); 
        write "\n"; 
        t := (val t) + toInt(val r); 
        loop() 
    } 
    else {
        write("Total:\n");
        write(val t);
        write "\n"
    }
);

// Evaluate the loop
{
    loop()
}


